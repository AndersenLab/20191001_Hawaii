`collection percentage with loc method 'photo'`,
`collection percentage with loc method 'fulcrum'`,
`collections with altitude method 'geonames'`,
`collections with altitude method 'fulcrum'`,
`collection percentage with altitude method 'geonames'`,
`collection percentage with altitude method 'fulcrum'`)) %>%
dplyr::rename(`collections with duplicated ids` = V1,
`collections with NA for colleciton id` = V2,
`collections without paired isolation data` = V3,
`collections with location method 'photo'` = V4,
`collections with location method 'fulcrum'` = V5,
`collection percentage with loc method 'photo'` = V6,
`collection percentage with loc method 'fulcrum'` = V7,
`collections with altitude method 'geonames'` = V8,
`collections with altitude method 'fulcrum'` = V9,
`collection percentage with altitude method 'geonames'` = V10,
`collection percentage with altitude method 'fulcrum'` = V11) %>%
tidyr::gather(`collection report`, value) %>%
dplyr::mutate(value = as.numeric(value)) %>%
# if percentage in type then display as percentage
dplyr::mutate(value = ifelse(str_detect(`collection report`, pattern = "percentage"), percent(value, scale = 100, accuracy = .1, trim = T), as.integer(value)))
# make nice table
knitr::kable(collection_counts)
# Find counts
isolation_counts1 <- fulcrum_dat %>%
dplyr::distinct(isolation_id, .keep_all = T) %>%
dplyr::mutate(`total number of distinct isolations` = n()) %>%
dplyr::filter(!is.na(isolation_id)) %>%
dplyr::mutate(`total number of distinct isolations NAs removed` = n())
`total number of distinct isolations` <- isolation_counts1 %>% dplyr::distinct(`total number of distinct isolations`) %>% pull(`total number of distinct isolations`)
`total number of distinct isolations NAs removed` <- isolation_counts1 %>% dplyr::distinct(`total number of distinct isolations NAs removed`) %>% pull(`total number of distinct isolations NAs removed`)
`average isolations per collection with worms` <- fulcrum_dat %>%
dplyr::filter(!is.na(isolation_id), !is.na(collection_id)) %>%
dplyr::group_by(collection_id) %>%
dplyr::mutate(num_isolations_for_collection = n()) %>%
dplyr::ungroup() %>%
dplyr::distinct(collection_id, .keep_all = T) %>%
dplyr::mutate(`average isolations per collection with worms` = mean(num_isolations_for_collection)) %>%
dplyr::distinct(`average isolations per collection with worms`) %>%
dplyr::pull(`average isolations per collection with worms`)
`isolations with duplicated ids` <- fulcrum_dat %>%
add_count(isolation_id) %>%
dplyr::filter(n > 1 & !is.na(isolation_id)) %>%
dplyr::distinct(isolation_id) %>%
dplyr::pull(isolation_id) %>%
paste(., collapse = ",")
`isolations without paired collection data` <- fulcrum_dat %>%
dplyr::filter(is.na(collection_id)) %>%
dplyr::mutate(n = n()) %>%
dplyr::distinct(isolation_id, .keep_all = T) %>%
dplyr::mutate(isolation_unpaired_names = paste(.$isolation_id, collapse =",")) %>%
dplyr::distinct(n, .keep_all = T) %>%
dplyr::mutate(`isolations without paired collection data` = glue::glue('({.$n} plates) {.$isolation_unpaired_names}'))
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n())
View(isolation_counts3)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
#dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n())
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::mutate(total = sum(n))
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::mutate(unknown = abs(`total number of distinct isolations NAs removed`-sum(n)))
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::rename(isolation_type = collection_type)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::rename(isolation_type = collection_type,
value = n)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::rename(isolation_report = collection_type,
value = n)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
dplyr::full_join(isolation_counts3)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`)
View(isolation_report)
`total number of distinct isolations`
`total number of distinct isolations NAs removed`
`average isolations per collection with worms`
`isolations with duplicated ids`
`isolations without paired collection data`
`isolations without paired collection data` <- fulcrum_dat %>%
dplyr::filter(is.na(collection_id)) %>%
dplyr::mutate(n = n()) %>%
dplyr::distinct(isolation_id, .keep_all = T) %>%
dplyr::mutate(isolation_unpaired_names = paste(.$isolation_id, collapse =",")) %>%
dplyr::distinct(n, .keep_all = T) %>%
dplyr::mutate(`isolations without paired collection data` = glue::glue('({.$n} plates) {.$isolation_unpaired_names}')) %>%
dplyr::pull(`isolations without paired collection data`)
`isolations without paired collection data`
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`)
isolation_report
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::full_join(isolation_counts3)
# find counts for genotypes
isolation_counts3 <- fulcrum_dat %>%
dplyr::mutate(collection_type = ifelse(worms_on_sample %in% c("No", "?"), "No Nematode",
ifelse(worms_on_sample == "Tracks", "Tracks only",
ifelse(worms_on_sample == "Yes" & is.na(ITS2_pcr_product), "Not genotyped",
ifelse(worms_on_sample == "Yes" & ITS2_pcr_product == 0, "PCR -",
ifelse(species_id %in% c("Chabertia ovina",
"Choriorhabditis cristata",
"Choriorhabditis sp.",
"Heterhabditis zealandica",
"Mesorhabditis sp.",
"no match",
"C. kamaaina",
"Rhabditis terricola",
"Rhanditis tericola",
"Teratorhabditis sp.",
"Unknown",
"unknown",
"Oscheius sp.",
"Panagrolaimus sp.",
"-",
NA),
"Other PCR +", species_id)))))) %>%
dplyr::select(isolation_id, collection_id, collection_type, collection_island, species_id, ITS2_pcr_product, worms_on_sample, collection_longitude, collection_latitude) %>%
dplyr::filter(collection_type != "Tracks only", collection_type != "No Nematode") %>%
dplyr::distinct(collection_id, isolation_id, .keep_all=T) %>%
dplyr::add_count(collection_type) %>%
dplyr::mutate(total = n()) %>%
dplyr::distinct(collection_type, n) %>%
dplyr::rename(`isolation report` = collection_type,
value = n)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::full_join(isolation_counts3)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::bind_rows(isolation_counts3)
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::full_join(isolation_counts3 %>% dplyr::muate(value = as.character(value))
) %>%
dplyr::mutate(`collection percentage with nematodes` = (`collections with nematodes`/`total number of distinct collections NAs removed`),
`collection percentage with tracks only` = (`collections with tracks only`/`total number of distinct collections NAs removed`),
`collection percentage with no worms` = (`collections without nematodes`/`total number of distinct collections NAs removed`)) %>%
dplyr::bind_cols(list(`collections with duplicated ids`,
`collections with NA for colleciton id`,
`collections without paired isolation data`,
`collections with location method 'photo'`,
`collections with location method 'fulcrum'`,
`collection percentage with loc method 'photo'`,
`collection percentage with loc method 'fulcrum'`,
`collections with altitude method 'geonames'`,
`collections with altitude method 'fulcrum'`,
`collection percentage with altitude method 'geonames'`,
`collection percentage with altitude method 'fulcrum'`)) %>%
dplyr::rename(`collections with duplicated ids` = V1,
`collections with NA for colleciton id` = V2,
`collections without paired isolation data` = V3,
`collections with location method 'photo'` = V4,
`collections with location method 'fulcrum'` = V5,
`collection percentage with loc method 'photo'` = V6,
`collection percentage with loc method 'fulcrum'` = V7,
`collections with altitude method 'geonames'` = V8,
`collections with altitude method 'fulcrum'` = V9,
`collection percentage with altitude method 'geonames'` = V10,
`collection percentage with altitude method 'fulcrum'` = V11) %>%
tidyr::gather(`collection report`, value) %>%
dplyr::mutate(value = as.numeric(value)) %>%
# if percentage in type then display as percentage
dplyr::mutate(value = ifelse(str_detect(`collection report`, pattern = "percentage"), percent(value, scale = 100, accuracy = .1, trim = T), as.integer(value)))
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::full_join(isolation_counts3 %>% dplyr::muate(value = as.character(value)))
# add it all together
isolation_report <- tibble(`total number of distinct isolations`,
`total number of distinct isolations NAs removed`,
`average isolations per collection with worms`,
`isolations with duplicated ids`,
`isolations without paired collection data`) %>%
tidyr::gather(`isolation report`, value) %>%
dplyr::full_join(isolation_counts3 %>% dplyr::mutate(value = as.character(value)))
# make nice table
knitr::kable(isolation_report)
install.packages("kableExtra")
library(kableExtra)
knitr::kable(`duplicated isolations for same collection`, caption = glue::glue("{`duplicated isolations for same collection` %>% dplyr::distinct(c_label) %>% dplyr::mutate(pull_n = n()) %>% dplyr::pull(pull_n)} collections with duplicated isolations in nematode_isolation.csv")) %>%
kable_styling() %>%
scroll_box(width = "100%", height = "200px")
`duplication in nematode_field_sampling.csv` %>% dplyr::distinct(c_label) %>% dplyr::mutate(pull_n = n())
`duplication in nematode_field_sampling.csv`
View(`duplication in nematode_field_sampling.csv`)
